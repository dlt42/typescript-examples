import { describe, expect, test } from "vitest";
import { Field, RawData } from "./flock.js";

const rawData1: RawData = [
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
];

const rawData2: RawData = [
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, `*`, `*`, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `],
];

const resultData2Group1: RawData = [
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
];

const resultData2Group2: RawData = [
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, `*`, `*`, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `],
];

const rawData3: RawData = [
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `],
  [`*`, `*`, ` `, ` `, ` `, ` `, ` `, `*`, `*`, `*`],
  [` `, `*`, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, `*`, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, `*`, `*`, ` `, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, `*`, ` `],
];

const rawData4: RawData = [
  [`*`, `*`, ` `, `*`, `*`, ` `, `*`, `*`, ` `, `*`],
  [`*`, `*`, ` `, `*`, `*`, ` `, `*`, `*`, ` `, `*`],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, `*`, ` `, `*`, `*`, ` `, `*`, `*`, ` `, `*`],
  [`*`, `*`, ` `, `*`, `*`, ` `, `*`, `*`, ` `, `*`],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, `*`, ` `, `*`, `*`, ` `, `*`, `*`, ` `, `*`],
  [`*`, `*`, ` `, `*`, `*`, ` `, `*`, `*`, ` `, `*`],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, `*`, ` `, `*`, `*`, ` `, `*`, `*`, ` `, `*`],
];

const rawData5: RawData = [
  [`*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
  [`*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `, `*`, ` `],
  [` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `, ` `],
];

describe(`findGroups`, () => {
  test(`Correctly returns the correct number of groups in a Field (1 group)`, async () => {
    const result = new Field({
      type: `RawData`,
      data: rawData1,
    }).getGroupCount();
    expect(result).toEqual(1);
  });

  test(`Correctly returns the correct number of groups in a Field (2 groups)`, async () => {
    const field = new Field({
      type: `RawData`,
      data: rawData2,
    });
    const result = field.getGroupCount();
    expect(result).toEqual(2);
    expect(field.getGroupData(1)).toEqual(resultData2Group1);
    expect(field.getGroupData(2)).toEqual(resultData2Group2);
  });

  test(`Correctly returns the correct number of groups in a Field (3 groups)`, async () => {
    const result = new Field({
      type: `RawData`,
      data: rawData3,
    }).getGroupCount();
    expect(result).toEqual(3);
  });

  test(`Correctly returns the correct number of groups in a Field (complex)`, async () => {
    const result = new Field({
      type: `RawData`,
      data: rawData4,
    }).getGroupCount();
    expect(result).toEqual(16);
  });

  test(`Correctly returns the correct number of groups in a Field (complex)`, async () => {
    const result = new Field({
      type: `RawData`,
      data: rawData5,
    }).getGroupCount();
    expect(result).toEqual(25);
  });
});
